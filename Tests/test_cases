test case #1 - procedure_Primary:
    input:
         A vector of token_323 objects with 192153584101141163 elements, 5
    expected output: 
        The program will crash since it will exceed tha amount of elements a vector<token_323> can have.
        
test case #2 - procedure_Primary 
    input:
    	A math operation involving a long data type over its representation value plus any other number 
    expected output:
    	The program will crash since it will exceed the amount of bits in a 64-bit sysytem 
  
test case #3 - R20. <print> -> put(<"this \0 is a string">)
    input:
        Within vector<string> a part of the string will have \0(null pointer) that terminates the program/stops current function 
    expected output:
        The program will still run but there will be chuncks of the string that will be missing 

test case #4 - Arithmetic Exception
    input:
    	Any math operation that involves division by zero.
    		Ex:
    			int x = 9/0;
    			int x = 0/0;
    			int x = y;     // where y is n/0 where n is != 0
    expected output:
    	The program should crash because division by 0 is not allowed because infinity, the theoretical answer
    	is not possible for a computer to store or compute. Even 0/0 shouldn't be allowed because it is logically
    	different to 0.

test case #5 - procedure_Parameter
    input:
        Passing in a negative number value as a parameter in the a function like sqrt().
    expected output:
        The program will crash and throw and exeption as a negative number is out of the domain of the sqrt() parameter. 
